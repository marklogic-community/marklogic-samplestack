{
  "id": "/questions/2068945",
  "creationDate": "2014-01-17T17:53:09.237",
  "body": "\n\nWe have a passwords table which references a user table.  Records never get deleted from the password table so if a user changes their password, a new entry with a more recent `Created` date gets inserted.\n\nThe hash of the password is salted with various things, most importantly the created date of the actual record.\n\nIn a stored procedure, I'm retrieving variables so I can do a hash for comparison.  I really just want to store the most recent password hash for a user along with the record's created date:\n\n\tDECLARE @ExistingPassword as varchar(200)\n\tDECLARE @LastChanged as DateTime\n\t\n\tSELECT Top 1\n\t    @ExistingPassword = p.PasswordHash,\n\t    @LastChanged = p.Created, \n\tFROM Password as p\n\tWHERE p.UserId = @UserId\n\tORDER BY p.Created DESC\n\t\n\nIs this a reasonably efficient way of getting the most recent password hash and its created date?  Is there a better way to do it?",
  "lastActivityDate": "2014-01-17T20:54:29.597",
  "title": "Is this an effective and efficient SQL Query or is there a better way?",
  "tags": [
    "sql-server",
    "performance",
    "stored-procedures"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201401",
  "itemTally": 0,
  "owner": null
}