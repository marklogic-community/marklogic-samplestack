{
  "id": "/questions/2649052",
  "creationDate": "2014-04-18T05:19:21.423",
  "body": "\n\nWorking on the data access / model layer in this little MVC2 project and trying to think things out to future projects.\n\nI have a database with some basic tables and I have classes in the model layer that represent them. I obviously need something to connect the two. The easiest is to provide some sort of 'provider' that can run operations on the database and return objects.\n\nBut this is for a website that would potentially be used \"a lot\" (I know, very general) so I want to cache results from the data layer and keep the cache updated as new data is generated.\n\nThis question deals with how best to approach this problem of dual DALS. One that returns cached data when possible and goes to the data layer when there is a cache miss. But more importantly, how to integrate the core provider (thing that goes into database) with the caching layer so that it too can rely on cached objects rather than creating new ones.\n\nRight now I have the following interfaces:\n\n`IDataProvider` is used to reach the database. It doesn't concern itself with the meaning of the objects it produces, but simply the way to produce them.\n\n\tinterface IDataProvider{\n\t    // Select, Update, Create, et cetera access\n\t    IEnumerable<Entry> GetEntries();\n\t\n\t    Entry GetEntryById(int id);\n\t}\n\t\n\n`IDataManager` is a layer that sits on top of the `IDataProvider` layer and manages the cache\n\n\tinterface IDataManager : IDataProvider{\n\t    void ClearCache();\n\t}\n\t\n\nNote that in practice the `IDataManager` implementation will have useful helper functions to add objects to their related cache stores. (In the future I may define other functions on the interface)\n\nI guess what I am looking for is the best way to approach a loop back from the `IDataProvider` implementations so that they can access the cache. Or a different approach entirely may be in order? I am not very interested in 3rd party products at the moment as I am interested in the design of these things much more than this specific implementation.\n\nEdit: I realize the title may be a bit misleading. I apologize for that... not sure what to call this question.",
  "lastActivityDate": "2014-04-19T01:47:05.903",
  "title": "Is a Multi-DAL Approach the way to go here?",
  "tags": [
    "c#",
    ".net",
    "asp.net-mvc-2",
    "data-access-layer"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201404",
  "itemTally": 0,
  "owner": null
}