{
  "id": "/questions/2264135",
  "creationDate": "2014-02-17T21:14:26.623",
  "body": "\n\nSo, I'm writing a python web application using the twisted web2 framework. There's a library that I need to use (SQLAlchemy, to be specific) that doesn't have asynchronous code. Would it be bad to spawn a thread to handle the request, fetch any data from the DB, and then return a response? I'm afraid that if there was a flood of requests, too many threads would be started and the server would be overwhelmed. Is there something built into twisted that prevents this from happening (eg request throttling)?",
  "lastActivityDate": "2014-02-17T21:45:02.960",
  "title": "twisted.web2 and spawining threads for synchronous code?",
  "tags": [
    "python",
    "multithreading",
    "twisted"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201402",
  "itemTally": 0,
  "owner": null
}