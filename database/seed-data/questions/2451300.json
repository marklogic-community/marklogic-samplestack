{
  "id": "/questions/2451300",
  "creationDate": "2014-03-18T07:57:32.847",
  "body": "\n\nI'll try my best to explain how I'm trying to set up this system.\n\nImagine a production server running WHM with various sites. We'll call these sites... site1, site2, site2\n\nNow, with the WHM setup, each site has a user/group defined for them, we'll keep these users/groups called site1,site2 for simplicity reasons.\n\nNow, updating these sites is accomplished using SVN, and through the use of a post commit script to auto update these sites (With .svn blocked through the apache configuration).\n\nThere are two regular maintainers of these sites, we'll call them Joe and Bob. Joe and Bob both have commandline access to the server through thier respective limited accounts.\n\nSo I've done the easy bit, managed to get SVN working with these \"maintainers\" so that when an SVN commit occurs, the changes are checked out and go live perfectly.\n\nHere's the cavet, and ultimately my problem. User permissions.\n\nThrough my testing of this setup, I've only managed to get it working by giving what is being updated permissions of 777, so that Joe and Bob can both read and write access to webfront directories for each of the sites.\n\nSo, an example of how it's set up now:\n\nJoe and Bob both belong to a group called \"Dev\". I have the master /svn folders set up for both read and write access to this group, and it works great. Post commit triggers, updates the site, and then sets 777 on each file within the webfront.\n\nI then changed this to try and factor in group permission updates, instead of straight 777.\n\nEach folder in /home/site1/public_html intially gets given a chmod of 664, and each folder 775\n\nWhich looks a little something like this\n\n\tdrwxrwxr-x .\n\tdrwxrwxr-x ..\n\tdrwxrwxr-x site1 site1 my_test_folder\n\t-rw-rw-r-- site1 site1 my_test_file\n\t\n\nSo site1 is sthe owner and group owner of those files and folders. So I then added site1 to Joe and Bobs secondary groups so that the SVN update will correctly allow access to these files.\n\nHerein lies the problem now.\n\nWhen I wish to add a file or folder to /home/site1, say Bobs_file, it then looks like this\n\n\tdrwxrwxr-x .\n\tdrwxrwxr-x ..\n\tdrwxr-xr-x Bob   dev   bobs_folder\n\tdrwxrwxr-x site1 site1 my_test_folder\n\t-rw-rw-r-- Bob   dev   bobs_file\n\t-rw-rw-r-- site1 site1 my_test_file\n\t\n\nHow can I get it so that with the set of user permissions Bob has available, to change the owner and group owner of that file to reflect \"site1\" \"site1\". As Bob belongs to Dev I can set the permissions correctly with CHMOd, but It appears CHGRP is throwing back operation errors.\n\nNow this was long winded enough to give an overview of exactly what I'm trying to accomplish, just incase I'm going about this arse-over-tit and there's a far easier solution. Here's my goals\n* 2 people to update\n* multiple user accounts specified given the structure of WHM\n* Trying to maintain master user/group permissions of file and folders to the original user account, and not the account of the updatee.\n* I like the security of SVN+SSH over just SVN.\n* Don't want to run all this over root.\n\nI hope this made sense, and thanks in advance :)",
  "lastActivityDate": "2014-03-18T16:52:30.870",
  "title": "Help with SVN+SSH permissions with CentOS/WHM setup",
  "tags": [
    "linux",
    "svn",
    "ssh",
    "whm"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201403",
  "itemTally": 0,
  "owner": null
}