{
  "id": "/questions/2267289",
  "creationDate": "2014-02-18T08:23:55.140",
  "body": "\n\nI have the following JSON class I am intending to use to perform management calls on my database asynchronously:\n\n\t<script type=\"text/javascript\">\n\t\n\t    var CalendarManager = {\n\t\n\t        defaultOptions: {\n\t            staffcode: 0,      // required\n\t            date: 0,           // required\n\t            activityCode: 0,   // required\n\t            clientCode: null,  // optional\n\t            contactCode: null, // optional\n\t            destination: '',   // optional/doesn't matter\n\t            travelCode: null,  // optional\n\t            miles: null,       // optional\n\t            overnight: false,  // optional\n\t            notes: ''          // optional/doesn't matter\n\t        },\n\t\n\t        createEvent: function(options) {\n\t            var combinedOptions = $.extend(true, {}, this.defaultOptions, options);\n\t            $.ajax({\n\t                type: \"POST\",\n\t                url: 'calendar/calendar-manager-ajax.aspx/CreateEvent',\n\t                data: combinedOptions,\n\t                contentType: \"application/json; charset=utf-8\",\n\t                dataType: \"json\",\n\t                success: function(data, textStatus, XMLHttpRequest) {\n\t                    alert(textStatus + \", \" + data);\n\t                },\n\t                error: function(data, textStatus, XMLHttpRequest) {\n\t                    alert(textStatus + \", \" + data);\n\t                }\n\t            });\n\t        }\n\t    };\n\t</script>\n\t\n\nI then use it in my page like so:\n\n\t<script type=\"text/javascript\">\n\t    CalendarManager.createEvent(); // random test\n\t</script>\n\t\n\nAt the moment, I'm trying to get this AJAX call fire the following method:\n\n\t[WebMethod()]\n\tpublic static string CreateEvent(int staffcode, int date, \n\t    int activitycode, int? clientcode,\n\t    int? contactCode, string destination, \n\t    int? travelcode, int? miles, \n\t    bool overnight, string notes)\n\t{\n\t    return null;\n\t}\n\t\n\nUnfortunately, the method `CreateEvent` isn't getting called, and I get an AJAX error (setting a breakpoint doesn't stop execution):\n\n> error, [object XMLHttpRequest]\n\nIf I change `data: combinedOptions` to `data: \"{}\"` and add another method to my ASPX (as below) the code works successfully:\n\n\t[WebMethod()]\n\tpublic static string CreateEvent()\n\t{\n\t    return null;\n\t}\n\t\n\nBasically, my question is: how do I specify optional parameters to a `WebMethod` when providing JSON data?\n\nI know I can reduce the parameters down to just the required values, and then use `HttpContext.Request.Params` to read the values of optional paramaters, but I would have thought the way I have tried here should have worked.\n\n*EDIT*\n\nThe `XMLHttpRequest.responseText` value for the error is:\n\n> Invalid JSON primitive: staffcode.\n\nThis is throwing me even more off the scent of the problem :(",
  "lastActivityDate": "2014-11-18T04:02:19.107",
  "title": "How do I pass optional parameters into a WebMethod via JSON?",
  "tags": [
    "asp.net",
    "jquery-ajax",
    "webmethod"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201411",
  "itemTally": 0,
  "owner": null
}