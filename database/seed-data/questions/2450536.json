{
  "id": "/questions/2450536",
  "creationDate": "2014-03-18T05:13:51.077",
  "body": "\n\nI'd like to implement MVC while using LINQ (specifically, LINQ-to-entities).  The way I would do this is have the Controller generate (or call something which generates) the result-set using LINQ, then return that to the View to display the data.  The problem is, if I do:\n\n\treturn (from o in myTable select o);\n\t\n\n**All** the columns are read from the database, even the ones (potentially dozens) I don't want.  And - more importantly - I *can't* do something like this:\n\n\treturn (from o in myTable select new { o.column });\n\t\n\nbecause there is no way to make anonymous types type-safe!  I know for sure there is no nice, clean way of doing this in 3.5 ([this](http://tomasp.net/blog/cannot-return-anonymous-type-from-method.aspx) is not clean...), **but what about 4.0?  Is there anything planned, or even proposed?**  Without something like duck-typing-for-LINQ, or type-safe anonymous return values (it seems to me the compiler should certainly be capable of that), it appears to be nearly impossible to cleanly separate the Controller from the View.",
  "lastActivityDate": "2014-11-20T09:31:02.143",
  "title": "Simple way to return anonymous types (to make MVC using LINQ possible)",
  "tags": [
    "c#",
    "asp.net-mvc",
    "linq",
    "linq-to-sql",
    "linq-to-entities"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201411",
  "itemTally": 0,
  "owner": null
}