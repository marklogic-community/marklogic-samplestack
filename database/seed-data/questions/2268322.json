{
  "id": "/questions/2268322",
  "creationDate": "2014-02-18T11:12:02.383",
  "body": "\n\nHere's an example of the architecture approach I favorited as for now:\n\n\tpublic abstract class CollectionComparer {\n\t    public virtual SetEqual(IEnumerable enum1, IEnumerable enum2) {\n\t        if(enum1== null && enum2== null)\n\t            return true;\n\t\n\t        if(enum1== null && !(enum2== null))\n\t            return false;\n\t\n\t        if(!(enum1== null) && enum2== null)\n\t            return false;\n\t\n\t        if(enum1.GetType().DeclaringType != enum2.GetType().DeclaringType)\n\t            return false;\n\t\n\t        var col1 = (from e in enum1 select e).ToList()\n\t        var col2 = (from e in enum2 select e).ToList()\n\t\n\t        if(col1.Count != col2.Count)\n\t            return false;           \n\t\n\t        foreach (element in col1)\n\t            if(!col2.Contains(element))\n\t                return false;\n\t\n\t        foreach (element in col2)\n\t            if(!col1.Contains(element))\n\t                return false;\n\t\n\t        return true; \n\t    }\n\t}\n\t\n\tpublic interface IProduct {\n\t    ...\n\t}\n\t\n\tpublic interface IOrder {\n\t    ...\n\t    ICustomer Customer { get; }\n\t    ICollection<IProduct> Products { get; }\n\t}\n\t\n\tpublic interface ICustomer {\n\t    ...\n\t    ICollection<IOrder> Orders { get; }\n\t}\n\t\n\tpublic internal Order : CollectionComparer, IOrder {\n\t    #region IOrder interface implementation\n\t    ...\n\t    #endregion\n\t}\n\t\n\tpublic internal Customer : CollectionComparer, ICustomer {\n\t    #region ICustomer interface implementation\n\t    ...\n\t    #endregion\n\t}\n\t\n\nWould this CollectionComparer abstract class approach be considered a good practice for collection comparison for an equivalent to object.Equals() applied to a collections?",
  "lastActivityDate": "2014-02-18T11:15:05.640",
  "title": "What is the better approach to compare a collection with another (architecturely speaking)?",
  "tags": [
    ".net",
    "oop",
    "ienumerable",
    "equals",
    "icollection"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201402",
  "itemTally": 0,
  "owner": null
}