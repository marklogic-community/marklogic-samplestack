{
  "id": "/questions/2265375",
  "creationDate": "2014-02-18T02:53:15.667",
  "body": "\n\nWell i have a custom control called Dialog to slim it down to the problem\nHere is my vb.net code:\n\n\tPublic Class Dialog\n\t    Inherits System.Windows.Controls.Control\n\t\n\t#Region \"DependencyProperties\"\n\t\n\t    Public Shared ReadOnly OkCommandProperty As DependencyProperty = _\n\t                           DependencyProperty.Register(\"OkCommand\", _\n\t                           GetType(ICommand), GetType(Dialog), _\n\t                           New FrameworkPropertyMetadata(Nothing))\n\t\n\t    Private Shared ReadOnly YesCommandPropertyKey As DependencyPropertyKey = _\n\t                            DependencyProperty.RegisterReadOnly(\"YesCommand\", _\n\t                            GetType(ICommand), GetType(Dialog), _\n\t                            New FrameworkPropertyMetadata(Nothing))\n\t\n\t    Public Shared ReadOnly YesCommandProperty As DependencyProperty = _\n\t                           YesCommandPropertyKey.DependencyProperty\n\t\n\t#End Region\n\t\n\t    Public ReadOnly Property YesCommand() As ICommand\n\t        Get\n\t            Return CType(GetValue(ConfirmationDialog.YesCommandProperty), ICommand)\n\t        End Get\n\t    End Property\n\t\n\t\n\t\n\t    Public Sub New()\n\t        MyBase.New()\n\t        SetValue(ConfirmationDialog.YesCommandPropertyKey, New RelayCommand(AddressOf Yes))\n\t    End Sub\n\t\n\t\n\t#Region \"Commands\"\n\t    Public Property OkCommand() As ICommand\n\t        Get\n\t            Return CType(GetValue(OkCommandProperty), ICommand)\n\t        End Get\n\t        Set(ByVal value As ICommand)\n\t            SetValue(OkCommandProperty, value)\n\t        End Set\n\t    End Property\n\t#End Region\n\t\n\t#Region \"Functions\"\n\t    Sub Ok()\n\t        Dim command As ICommand = OkCommand\n\t        If (command Is Nothing AndAlso command.CanExecute(Nothing)) Then\n\t            command.Execute(Nothing)\n\t        End If\n\t    End Sub\n\t\n\t    Sub Yes(ByVal parameter As Object)\n\t        Ok()\n\t        Me.Visibility = Windows.Visibility.Collapsed\n\t    End Sub\n\t#End Region\n\t\n\t    Shared Sub New()\n\t        'This OverrideMetadata call tells the system that this element wants to provide a style that is different than its base class.\n\t        'This style is defined in themes\\generic.xaml\n\t        DefaultStyleKeyProperty.OverrideMetadata(GetType(Dialog), New FrameworkPropertyMetadata(GetType(Dialog)))\n\t    End Sub\n\tEnd Class\n\t\n\nand here is my xaml:\n\n\t<Style TargetType=\"{x:Type local:Dialog}\">\n\t    <Setter Property=\"Template\">\n\t        <Setter.Value>\n\t            <ControlTemplate TargetType=\"{x:Type local:Dialog}\">\n\t               <Button Content=\"Yes\" Command=\"{Binding YesCommand}\"/> \n\t            </ControlTemplate>\n\t        </Setter.Value>\n\t    </Setter>\n\t</Style>\n\t\n\nBut YesCommand does not seem to work, but if i put OkCommand it works so why can't i bind to a command thats defined and set in codebehind (or the control code)?",
  "lastActivityDate": "2014-09-30T08:47:01.947",
  "title": "WPF CustomControl Commands and databinding",
  "tags": [
    "wpf",
    "vb.net",
    "commandbinding"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201409",
  "itemTally": 0,
  "owner": null
}