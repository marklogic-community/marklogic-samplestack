{
  "id": "/questions/2444519",
  "creationDate": "2014-03-17T09:02:00.213",
  "body": "\n\nI am writing a client for a server that typically sends data as strings in 500 or less bytes. However, the data will occasionally exceed that, and a single set of data could contain 200,000 bytes, for all the client knows (on initialization or significant events). However, I would like to not have to have each client running with a 50 MB socket buffer (if it's even possible).\n\nEach set of data is delimited by a null `\\0` character. What kind of structure should I look at for storing partially sent data sets?\n\nFor example, the server may send `ABCDEFGHIJKLMNOPQRSTUV\\0WXYZ\\0123!\\0`. I would want to process `ABCDEFGHIJKLMNOPQRSTUV`, `WXYZ`, and `123!` independently. Also, the server could send `ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890LOL123HAHATHISISREALLYLONG` without the terminating character. I would want that data set stored somewhere for later appending and processing.\n\nAlso, I'm using asynchronous socket methods (`BeginSend`, `EndSend`, `BeginReceive`, `EndReceive`) if that matters.\n\nCurrently I'm debating between `List<Byte>` and `StringBuilder`. Any comparison of the two for this situation would be very helpful.",
  "lastActivityDate": "2014-03-17T09:30:08.137",
  "title": "How should I handle incomplete packet buffers?",
  "tags": [
    "c#",
    "sockets",
    "buffer"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201403",
  "itemTally": 0,
  "owner": null
}