{
  "id": "/questions/2841665",
  "creationDate": "2014-05-18T04:36:43.227",
  "body": "\n\nI have an asp.net mvc 2.0 application that contains Areas/Modules like calendar, admin, etc... There may be cases where more than one area needs to access the same Repo, so I am not sure where to put the Data Access Layers and Repositories. \n\n**First Option:**\nShould I create Data Access Layer files (Linq to SQL in my case) with their accompanying Repositories for each area, so each area only contains the Tables, and Repositories needed by those areas. \n\nThe benefit is that everything needed to run that module is one place, so it is more encapsulated (in my mind anyway). The downside is that I may have duplicate queries, because other modules may use the same query.\n\n**Second Option**\nOr, would it be better to place the DAL and Repositories outside the Area's and treat them as Global? \n\nThe advantage is I won't have any duplicate queries, but I may be loading a lot of unnecessary queries and DAL tables up for certain modules. It is also more work to reuse or modify these modules for future projects (though the chance of reusing them is slim to none :))\n\nWhich option makes more sense? If someone has a better way I'd love to hear it.\n\nThanks!",
  "lastActivityDate": "2014-05-18T05:11:20.823",
  "title": "How would you organize this in asp.net mvc?",
  "tags": [
    "asp.net-mvc",
    "asp.net-mvc-2",
    "repository",
    "domain-driven-design"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201405",
  "itemTally": 0,
  "owner": null
}