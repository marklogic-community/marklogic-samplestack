{"id":"/questions/20887676.json", "creationDate":"2014-01-02T16:54:28.797", "body":"\n\nI'm new to threads so it might be an easy one for you, but I've spent some hours trying to figure it out.\n\nLet's say I have a function\n\n\tpublic double Gain(List<int> lRelevantObsIndex, ushort uRelevantAttribute)\n\t\n\nwhich needs some time to finish, but is a read only func.\n\nI have an array of ushort[] values, and I want to get the ushort value that achieves the minimum value of the Gain function.\n\nHere is what I've got so far, but it's not working:\n\n**lRelevantObsIndex** is a read only index.\n\n**lRelevantAttributes** is the list of ushort values.\n\n\t        //Initialize the threads\n\t        double[] aGains = new double[lRelevantAttributes.Count];\n\t        Thread[] aThreads = new Thread[lRelevantAttributes.Count];\n\t        for (int i = 0; i < lRelevantAttributes.Count; i++)\n\t        {\n\t            aThreads[i] = new Thread(() => aGains[i] = Gain(lRelevantObsIndex, lRelevantAttributes[i]));\n\t            aThreads[i].Start();\n\t        }\n\t\n\t        //Join the threads\n\t        for (int i = 0; i < lRelevantAttributes.Count; i++)\n\t            aThreads[i].Join();\n\t\n\t        //The easy part - find the minimum once all threads are done\n\t        ushort uResult = 0;\n\t        double dMinGain = UInt16.MaxValue;\n\t        for (int i = 0; i < lRelevantAttributes.Count; i++)\n\t        {\n\t            if (aGains[i] < dMinGain)\n\t            {\n\t                dMinGain = aGains[i];\n\t                uResult = lRelevantAttributes[i];\n\t            }\n\t        }\n\t\n\t        return uResult;\n\t\n\nI know this is a simple multithreading question - but still need your brains since I'm new to this.", "lastActivityDate":"2014-01-02T23:58:05.360", "title":"Use array of threads", "tags":["c#", "multithreading"], "docScore":0, "comments":[], "answers":[], "creationYearMonth":"201401", "itemTally":0, "owner":null}