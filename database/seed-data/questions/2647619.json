{
  "id": "/questions/2647619",
  "creationDate": "2014-04-18T01:34:40.233",
  "body": "\n\nThanks to AakashM, he led me in the right direction. For the question below, this is the xPath expression that led me the right way:\n\n\t\"//channel/item[category[@domain='http://www.somelink.com/?category=4']]\"\n\t\n\n**Original post:**\n\nI have an XML feed that looks something like this (excerpt):\n\n\t<channel>\n\t  <title>Channel Name</title>\n\t  <link>Link to the channel</link>\n\t\n\t    <item>\n\t      <title>Heading 1</title>\n\t      <link>http://www.somelink.com?id=100</link>\n\t      <description><![CDATA[ Text here ]]></description>\n\t      <publishDate>Fri, 03 Apr 2009 10:00:00</publishDate>\n\t      <guid>http://www.somelink.com/read-story-100</guid>\n\t      <category domain=\"http://www.somelink.com/?category=4\">Category 1</category>\n\t    </item>\n\t\n\t    <item>\n\t      <title>Heading 2</title>\n\t      <link>http://www.somelink.com?id=110</link>\n\t      <description><![CDATA[ Text here ]]></description>\n\t      <publishDate>Fri, 03 Apr 2009 11:00:00</publishDate>\n\t      <guid>http://www.somelink.com/read-story-110</guid>\n\t      <category domain=\"http://www.somelink.com/?category=4\">Category 1</category>\n\t    </item>\n\t\n\t  <channel>\n\t\n\nThat's the rough of it. I'm using this piece of PHP (excerpt): \n\n\t$xml = simple_xml_load_file($xmlFile);\n\t$xml->xpath($pattern);\n\t\n\nNow I want to get all ITEM-nodes (with their children) based on that pesky \"domain\" attribute in the category node, but *no matter what I try it does-not-work*. \n\n**The closest I got was \"//category[@domain= 'http://www.somelink.com/?category=4']\"**\n\nThe expression I tried gave me this result:\n\n\t [0] => SimpleXMLElement Object\n\t        (\n\t            [@attributes] => Array\n\t                (\n\t                    [domain] => http://www.somelink.com/?category=4\n\t                )\n\t\n\t            [0] => Category 1\n\t\n\t [1] => SimpleXMLElement Object\n\t        (\n\t            [@attributes] => Array\n\t                (\n\t                    [domain] => http://www.somelink.com/?category=4\n\t                )\n\t\n\t            [0] => Category 1\n\t\n\nThe expression should contain all childrens of the two items in the example, but as you can see only the info in the category node is present, I want all the item nodes. \n\nAny help would be highly appreciated.",
  "lastActivityDate": "2014-04-18T02:09:21.080",
  "title": "How do I select all parenting items based on a given node's attribute in php's xPath?",
  "tags": [
    "php",
    "xpath",
    "design-patterns"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201404",
  "itemTally": 0,
  "owner": null
}