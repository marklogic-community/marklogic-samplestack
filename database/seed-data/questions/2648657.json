{
  "id": "/questions/2648657",
  "creationDate": "2014-04-18T04:14:52.007",
  "body": "\n\nI'd like to use a `DataGridViewRowCollection` in a LINQ expression using extension methods and lambda expressions. Unfortunately, the extension methods are for types `IEnumerable<T>`, which `DataGridViewRowCollection` doesn't implement. The funny thing is, I can use LINQ here with the SQL-like syntax:\n\n\tIEnumerable<DataGridViewRow> lRows = from DataGridViewRow row in dgvGrid.Rows \n\t                                     select row;\n\t\n\nAfter doing that, I *can* use LINQ extension methods:\n\n\tforeach (DataGridViewRow lRow in lRows.Where(row => row.index > 4)) { ... }\n\t\n\nIs there any way I can convert my `DataGridViewRowCollection` to an `IEnumerable<>` without using that long first statement? The same thing applies to `DataGridViewCellCollection` and `DataGridViewColumnCollection`.\n\nps. I'm using .net framework 3.5",
  "lastActivityDate": "2014-09-15T19:16:12.577",
  "title": "Using DataGridViewRowCollection object in LINQ",
  "tags": [
    "c#",
    "linq",
    "datagridview"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201409",
  "itemTally": 0,
  "owner": null
}