{
  "id": "/questions/2074350",
  "creationDate": "2014-01-18T11:52:24.053",
  "body": "\n\nI'm trying to define the inheritance-check predicate `is_a/2` in Prolog, but so far all my trials failed.\n\nThe `is_a(X, Y)` predicate should return true whenever Y is a superclass of X. For example:\n\n\tobject(bare).\n\tobject(mammal).\n\tobject(animal).\n\tobject(bird).\n\tis_a(bare, mammal).\n\tis_a(mammal, animal).\n\tis_a(bird, animal).\n\tis_a(X, Y):- <definition goes here>.\n\t\n\nThe definition should go such that the following query will return true:\n\n\t?- is_a(bare, animal).\n\ttrue.\n\t\n\nI tried to define it the *obvious* way, but I got stuck in infinite loops:\n\n\tis_a(X, Y):- X\\==Y, object(X), object(Y), object(Z), is_a(X, Z), is_a(Z, Y).\n\t\n\nAny suggestions?",
  "lastActivityDate": "2014-10-13T11:05:19.847",
  "title": "Defining is_a predicate in prolog?",
  "tags": [
    "inheritance",
    "prolog",
    "predicate"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201410",
  "itemTally": 0,
  "owner": null
}