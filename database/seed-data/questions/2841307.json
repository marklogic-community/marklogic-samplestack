{
  "id": "/questions/2841307",
  "creationDate": "2014-05-18T02:43:21.253",
  "body": "\n\nI am currently trying to add 301 redirect to my routes in MVC\n\nto do this I have tried to inherit from the MvcHandler.\nThe handler gets instantited with the right values. but I am never able to debug the overridden methods. \n\ncan someone show me a working attempt at this? the asp.net pipe simply seems to the doing its own thing...  \n\n\tpublic class CodeHttpHandler : MvcHandler\n\t{\n\t    public CodeHttpHandler(RequestContext p_requestContext)\n\t            : base(p_requestContext)\n\t    {\n\t    }\n\t    protected override void ProcessRequest(HttpContext p_httpContext)\n\t    {\n\t    }\n\t    protected override void ProcessRequest(HttpContextBase p_httpContext)\n\t    {\n\t    }\n\t}\n\t\n\nUpdate: \n\nThis is the solutions I found so far: \n\n\tpublic class CodeRouteHandler : IRouteHandler\n\t{\n\t    public System.Web.IHttpHandler GetHttpHandler(RequestContext requestContext)\n\t    {\n\t        return new CodeHandler(requestContext);\n\t    }\n\t}\n\t\n\tpublic class CodeRouteConstants\n\t{\n\t    public const string CODE = \"code\";\n\t    public const string REDIRECT = \"Redirect\";\n\t}\n\t\n\tpublic class CodeHandler : MvcHandler\n\t{\n\t    public CodeHandler(RequestContext requestContext)\n\t        : base(requestContext)\n\t    {\n\t    }\n\t\n\t    private int? HandleCodedRoute(System.Web.HttpContextBase httpContext)\n\t    {\n\t        var context = httpContext.Request.RequestContext.RouteData;\n\t        if (context.DataTokens.ContainsKey(CodeRouteConstants.CODE))\n\t        {\n\t            var statusCode = Int32.Parse(context.DataTokens[CodeRouteConstants.CODE] as string ?? \"500\");\n\t\n\t            httpContext.Response.StatusCode = statusCode;\n\t\n\t            if (context.DataTokens.ContainsKey(CodeRouteConstants.REDIRECT))\n\t            {\n\t                var redirectionMap = context.DataTokens[CodeRouteConstants.REDIRECT] as string ?? \"404\";\n\t\n\t                foreach (var v in context.Values)\n\t                {\n\t                    redirectionMap = redirectionMap.Replace(string.Format(\"{{{0}}}\", v.Key), v.Value as string);\n\t                }\n\t\n\t                httpContext.Response.AddHeader(\"Location\", redirectionMap);\n\t            }\n\t\n\t            httpContext.Response.End();\n\t            return statusCode;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    protected override System.IAsyncResult BeginProcessRequest(System.Web.HttpContext httpContext, System.AsyncCallback callback, object state)\n\t    {\n\t        var statusCode = HandleCodedRoute(new HttpContextWrapper(httpContext));\n\t        if (statusCode.HasValue)\n\t        {\n\t            return null;\n\t        }\n\t        return base.BeginProcessRequest(httpContext, callback, state);\n\t    }\n\t\n\t    protected override System.IAsyncResult BeginProcessRequest(System.Web.HttpContextBase httpContext, System.AsyncCallback callback, object state)\n\t    {\n\t        return base.BeginProcessRequest(httpContext, callback, state);\n\t    }\n\t\n\t    protected override void ProcessRequest(System.Web.HttpContext httpContext)\n\t    {\n\t        base.ProcessRequest(httpContext);\n\t    }\n\t    protected override void ProcessRequest(System.Web.HttpContextBase httpContext)\n\t    {\n\t        base.ProcessRequest(httpContext);\n\t    }\n\t}\n\t",
  "lastActivityDate": "2014-06-17T03:24:23.657",
  "title": "Trying to add functionality to MvcHandler",
  "tags": [
    ".net",
    "asp.net-mvc-2",
    "c#-4.0"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201406",
  "itemTally": 0,
  "owner": null
}