{
  "id": "/questions/2447591",
  "creationDate": "2014-03-17T21:51:55.037",
  "body": "\n\nWe are developing an application which consists of: \n* a source code base given to us by a partner infrequently. This is a somewhat working code, \"final\" version of something (and we get it in a zip file). They have their own release cycle and version tracking.\n* on the code base above we make our changes. These can be either bugfixes or development of new features.\n\nTill now, we managed to create some code mayhem, as a result we would like to put all this in a SVN repository. I would like to ask you what you think is the best practice for this to happen with the less pain.\n\nThe followings are our things that we consider important:\n* We would like to track our bugfixes/changes since we cannot send back bugfixes to our software vendor, but we can report a bug (and they might or might not fix it). All we develop on their code remains \"in-house\" they are not interested in our changes.\n* As long as we don't get a new codebase from the vendor, we consider their latest version to be the stable one we are working on. This might be branched down further, but the result is always a stable trunk, the build is done based on this \"stable\" trunk.\n* When the vendor releases a new version we would like to merge our \"stable\" trunk (which contains a lot of changes) with their changes, thus creating a new \"stable\" trunk.\n* For each version we deploy (to clients) we should be able later to fix bugs only on that version, for clients who have installed our system using that specific version\n* There are more developers working on the codebase... (as usual :) \n\nThanks a lot for the tips.",
  "lastActivityDate": "2014-03-17T22:07:41.970",
  "title": "SVN Question regarding branching and third party vendor branching",
  "tags": [
    "svn",
    "branch",
    "vendor-branch"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201403",
  "itemTally": 0,
  "owner": null
}