{
  "id": "/questions/2644243",
  "creationDate": "2014-04-17T17:50:53.773",
  "body": "\n\nI have written an application using LINQ-to-SQL that submits a web form into a database. I absact the LINQ-to-SQL away using a Repository pattern.\n\nThis repository has the basic methods: Get(), Save(), etc.\n\nAs a development of the project, I needed to encrypt certain fields in the form. This was trivial, as I just added the encryption calls to the Get(), Save() methods in the Repository.\n\nNow, I want to put an oData layer over it, to allow RESTful extraction from MS Excel 2010 (when it comes out). I have this working, after a few stumbles on useless error messages, etc.\n\nHowever, obviously, those encrypted fields are still encrypted. My repository pattern would have decrypted these for me. As far as I know, I have to directly bind my oData service to the LINQ-to-SQL context for the schema, etc. to work - unless I enter a whole world of pain (any URLs appreciated). \n\nIs there a way I can insert my encryption/decryption layer into the request so decryption is done \"on the fly\"? I looked at the OnStartProcessingRequest() overload of DataService but this doesn't seem that useful.",
  "lastActivityDate": "2014-02-24T08:31:49.933",
  "title": "oData/ADO.NET Data Services using LINQ-to-SQL with a decryption layer",
  "tags": [
    "linq-to-sql",
    "wcf-data-services",
    "odata"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201402",
  "itemTally": 0,
  "owner": null
}