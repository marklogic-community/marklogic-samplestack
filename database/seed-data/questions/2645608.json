{
  "id": "/questions/2645608",
  "creationDate": "2014-04-17T21:25:15.073",
  "body": "\n\nI have been looking through some code on an open source project recently and found many occurrences of this kind of code:\n\n\tclass SomeClass\n\t{\n\t    private int SomeNumber = 42;\n\t\n\t    public ReturnValue UseSomeNumber(...)\n\t    {\n\t        int someNumberCopy = this.SomeNumber;\n\t        if (someNumberCopy > ...)\n\t        {\n\t            // ... do some work with someNumberCopy\n\t        }\n\t        else\n\t        {\n\t            // ... do something else with someNumberCopy\n\t        }\n\t    }\n\t}\n\t\n\nIs there any real benefit to making a copy of the instance variable?",
  "lastActivityDate": "2014-04-17T21:38:21.963",
  "title": "C# Copying instance variable to local variable in functions of same class",
  "tags": [
    "c#",
    "instance-variables"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201404",
  "itemTally": 0,
  "owner": null
}