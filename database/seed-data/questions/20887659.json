{
  "id": "/questions/20887659",
  "creationDate": "2014-01-05T08:52:28.703",
  "body": "\n\nLet's assume i have a simple `ActionBlock<int>`\n\n\tvar actionBlock = new ActionBlock<int>(_ => Console.WriteLine(_));\n\t\n\nI can specify a bounded capacity to enable buffering:\n\n\tvar actionBlock = new ActionBlock<int>(\n\t    _ => Console.WriteLine(_),\n\t    new ExecutionDataflowBlockOptions\n\t    { \n\t        BoundedCapacity = 1000\n\t    });\n\t\n\nIs it better to create a `BufferBlock<T>` and link it to the actionBlock, is it the same, Or is it redundant?",
  "lastActivityDate": "2014-08-11T05:42:56.223",
  "title": "Difference between DataflowBlockOptions.BoundedCapacity and BufferBlock<T>",
  "tags": [
    ".net",
    "task-parallel-library",
    "tpl-dataflow"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201408",
  "itemTally": 0,
  "owner": {
    "displayName": "I3arnon",
    "id": "885318"
  }
}