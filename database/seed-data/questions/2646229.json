{
  "id": "/questions/2646229",
  "creationDate": "2014-04-17T22:38:32.650",
  "body": "\n\nI am working on porting a VB6 application to C# (Winforms 3.5) and while doing so I'm trying to break up the functionality into various classes (ie database class, data validation class, string manipulation class).\n\nRight now when I attempt to run the program in Debug mode the program pauses and then crashes with a **StackOverFlowException**.  VS 2008 suggests a **infinite recursion** cause.\n\nI have been trying to trace what might be causing this recursion and right now my only hypothesis is that class initializations (which I do in the header(?) of each class).\n\nMy thought is this:\n* mainForm initializes classA\n* classA initializes classB\n* classB initializes classA\n* ....\n\nDoes this make sense or should I be looking elsewhere?\n\n**UPDATE1 (a code sample):**\n\n**mainForm**\n\n\tnamespace john\n\t{\n\t    public partial class frmLogin : Form\n\t    {\n\t    stringCustom sc = new sc();\n\t\n\n**stringCustom**\n\n\tnamespace john\n\t{\n\t   class stringCustom\n\t   {\n\t       retrieveValues rv = new retrieveValues();\n\t\n\n**retrieveValues**\n\n\tnamespace john\n\t{\n\t    class retrieveValues\n\t    {\n\t    stringCustom sc = new stringCustom();\n\t",
  "lastActivityDate": "2014-04-17T23:28:19.950",
  "title": "C# - Determine if class initializaion causes infinite recursion?",
  "tags": [
    "c#",
    "winforms",
    ".net-3.5"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201404",
  "itemTally": 0,
  "owner": null
}