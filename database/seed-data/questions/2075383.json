{
  "id": "/questions/2075383",
  "creationDate": "2014-01-18T15:15:29.423",
  "body": "\n\nI'm trying to enable IPv6 in a Python 2 application and am running into trouble.  Whenever I try to bind to an IPv6 socket, a `socket.error: getsockaddrarg: bad family` exception is thrown.  I can reproduce the error simply by doing:\n\n\timport socket\n\t\n\ts = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\n\ts.bind(('', 12345))\n\t\n\nThis code works fine if I run in Python 3.  Unfortunately the script would need a significant porting effort to work in Python 3 and I'd rather not have to do that yet.\n\nIs there something I need to do to get IPv6 working in Python 2 or am I S-O-L?\n\nDetails:\nPython 2.6.2 (r262:71600, Oct 24 2009, 03:16:31) \n[GCC 4.4.1 [gcc-4_4-branch revision 150839]] on linux2\n(it's the Python that's part of the standard openSUSE 11.2 install).\n\n**Update**\n\nAfter AndiDog helped me figure out that socket.AF_INET6 is defined even when IPv6 is not configured, I discovered `socket.has_ipv6`.  This is defined as a boolean and indicates whether Python was build with IPv6.",
  "lastActivityDate": "2014-01-18T17:21:53.360",
  "title": "Python 2 and IPv6",
  "tags": [
    "python",
    "ipv6"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201401",
  "itemTally": 0,
  "owner": null
}