{
  "id": "/questions/2840341",
  "creationDate": "2014-05-17T21:49:44.487",
  "body": "\n\nI was just wondering if it's possible to \"rename\" an association in Rails. Let's assume :\n\n\t# An ActiveRecord Class named SomeModelASubModel (some_model_a_sub_model.rb)\n\tclass SomeModelASubModel < ActiveRecord::Base\n\t  has_many :some_model_a_sub_model_items\n\tend\n\t\n\t# An ActiveRecord Class named SomeModelASubModelItem (some_model_a_sub_model_item.rb)\n\tclass SomeModelASubModelItem < ActiveRecord::Base\n\t  belongs_to :some_model_a_sub_model\n\tend\n\t\n\nAt this point, calling some_model.items, where some_model is an instance of the SomeModelASubModel Class would trigger an undefined method error.\n\nWhat is the best practice for making this happen though, e.g. :\n\n\t# With a method_alias or something, would it be possible to :\n\tsome_model = SomeModelASubModel.first # for instance\n\titems = some_model.items\n\t\n\t# For the reason stated, this doesn't work, one has to call :\n\titems = some_model.some_model_a_sub_model_items\n\t\n\nIs such a shorthand possible ?\n\nThank you in advance !",
  "lastActivityDate": "2014-05-17T21:58:40.317",
  "title": "Rails attribute alias",
  "tags": [
    "ruby-on-rails",
    "activerecord"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201405",
  "itemTally": 0,
  "owner": null
}