{
  "id": "/questions/2074997",
  "creationDate": "2014-01-18T13:45:15.007",
  "body": "\n\nI have a socket wrapper class that sends and recieves messages with a server (specifically commands, responses, and notifications).  I also have a consuming class that serializes the commands into text to send through the wrapper.  My problem is that when a command is sent, I need to wait until I get a message back with a particular header.  When I do this, the consuming class locks as I am using ManualResetEvent.WaitOne that is set by my receiving method.  The reason it's a problem when my consuming class locks is that another message might be received in the meantime and I cannot process it.  Is there any way to lock a specific object so my class can still respond to other events?\n\nSend method:\n\n\t    _waitingCommands.Enqueue(command);\n\t    String commandText = command.ToString();\n\t    _socket.Send(commandText);\n\t\n\nReceive method:\n\n\tif (response.Header.Type == Messages.MessageType.Response)\n\t{\n\t   if (command.Response == null)\n\t      command.Response = response;\n\t\n\t   _waitingCommands.Dequeue();\n\t   command.Finished.Set();\n\t}\n\t",
  "lastActivityDate": "2014-01-18T13:57:22.213",
  "title": "C# Asynchronous Socket Comms Blocking",
  "tags": [
    "c#",
    "sockets"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201401",
  "itemTally": 0,
  "owner": null
}