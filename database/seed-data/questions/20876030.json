{
  "id": "/questions/20876030",
  "creationDate": "2014-01-04T19:46:54.030",
  "body": "\n\nLet's say you have two collections:\n\n**collectionA**\n* name\n* description\n* votes\n\n**collectionB**\n* collectionAId\n* votes\n\nI want to update all the votes in collectionA with the values in collectionB. If I was doing this with SQL I would do something like this:\n\n\tupdate collectionA \n\tset collectionA.votes = collectionB.votes \n\tfrom collectionA \n\tinner join collectionB \n\ton collectionA._id = collectionB.collectionAId\n\t\n\nThe only way have found to do the equivalent of this with MongoDB is to use forEach or another client side cursor. With millions of documents, however, a client side cursor making millions of individual updates is extremely slow. How can I get this done in MongoDB with only 1 or a few client side calls and most of the work occurring on the actual database server?",
  "lastActivityDate": "2014-08-11T05:42:56.211",
  "title": "UPDATE SET FROM in MongoDB",
  "tags": [
    "mongodb",
    "nosql"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201408",
  "itemTally": 0,
  "owner": {
    "displayName": "Jeff Whelpley",
    "id": "1731785"
  }
}