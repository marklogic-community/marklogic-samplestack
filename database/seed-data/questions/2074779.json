{
  "id": "/questions/2074779",
  "creationDate": "2014-01-18T13:06:12.923",
  "body": "\n\nThis may seem kind of \"homework-ish\" and/or trivial, but it is for a real business purpose; it's just the easiest way I could think of to explain what I'm conceptually trying to do. \n\nSuppose I have an Animal class, and some other classes (Bird, Cat, Kangaroo). Each of these inherits from Animal. \n\nAnimal might look like this:\n\n\tpublic class Animal\n\t{\n\t    public Animal()\n\t    {\n\t\n\t    }\n\t\n\t    public string Name { get; set; }\n\t    public string AnimalType { get; set; }\n\t    public List<Animal> Friends { get; set; }\n\t}\n\t\n\nKangaroo might look like this:\n\n\tpublic class Kangaroo : Animal\n\t{\n\t    public Kangaroo()\n\t    {\n\t\n\t    }\n\t\n\t    public int TailLengthInches { get; set; }\n\t}\n\t\n\nSuppose the kangaroo has two friends, a bird and a cat. How could I add those to the list of \"Animal\" friends (as type Animal), but preserve the ability to access the properties of the derived classes? (as in, I still need to be able to work with properties that are specific to the type of animal, like FeatherColor for the bird, for example, even though they will be considered just \"animals\". \n\nThe reason I am trying to do this is that when I later get the list of the animal's \"friends\", it is vital that I know what type of animal the friend is. Depending on the animal type (whether it is a bird, cat, etc) I want to do something different (show a different template in on an ASP.NET page, actually, but I don't need help with that specifically). \n\nI guess it boils down to this...if I have a list of Animal, how do I know what the derived type was for each of the objects in the list, so I can cast them back to their derived type or do something else that allows me to get to the specific, different properties that are on each derived type?\n\nThanks!",
  "lastActivityDate": "2014-01-18T13:17:04.920",
  "title": "Identifying derived types from a list of base class objects",
  "tags": [
    "c#",
    "class",
    "inheritance",
    "types",
    "derived"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201401",
  "itemTally": 0,
  "owner": null
}