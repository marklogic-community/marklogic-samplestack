{
  "id": "/questions/2263884",
  "creationDate": "2014-02-17T19:08:26.970",
  "body": "\n\nThe problem is this. I have made a set \n\n\tSet<User> users = Collections.synchronizedSet(new HashSet<User>())\n\t...\n\tfor(User u : users){\n\t   //do something with u\n\t} \n\t\n\nNow, according to Java documentation.\n\n> It is imperative that the user\n  manually synchronize on the returned\n  sorted set when iterating over it or\n  any of its subSet, headSet, or tailSet\n  views.\n\n> \t SortedSet s = Collections.synchronizedSortedSet(new HashSortedSet());\n\t ...\n\t synchronized(s) {\n\t    Iterator i = s.iterator(); // Must be in the synchronized block\n\t    while (i.hasNext())\n\t       foo(i.next());\n\t }\n\t\n\nI'm pretty sure that for each syntax uses iterators but I'm unsure whether or not I should wrap every for each loop with a synchronized block.\n\nAnother thing, my IDE (IntelliJ IDEA) keeps reporting that using a synchronized block over a field that is not final is unlikely to have useful semantics since different threads might be different objects, even when working on a same object. ",
  "lastActivityDate": "2014-02-17T19:30:59.933",
  "title": "Using for each syntax with Collections.synchronizedSet",
  "tags": [
    "java",
    "collections",
    "synchronization"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201402",
  "itemTally": 0,
  "owner": null
}