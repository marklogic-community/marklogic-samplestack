{
  "id": "/questions/2447909",
  "creationDate": "2014-03-17T22:43:26.987",
  "body": "\n\nI have a database containing a single huge table. At the moment a query can take anything from 10 to 20 minutes and I need that to go down to 10 seconds. I have spent months trying different products like GridSQL. GridSQL works fine, but is using its own parser which does not have all the needed features. I have also optimized my database in various ways without getting the speedup I need. \n\nI have a theory on how one could scale out queries, meaning that I utilize several nodes to run a single query in parallel. A precondition is that the data is partitioned (vertically), one partition placed on each node. The idea is to take an incoming SQL query and simply run it exactly like it is on all the nodes. When the results are returned to a coordinator node, the same query is run on the union of the resultsets. I realize that an aggregate function like average need to be rewritten into a count and sum to the nodes and that the coordinator divides the sum of the sums with the sum of the counts to get the average.\n\nWhat kinds of problems could not easily be solved using this model. I believe one issue would be the count distinct function.\n\nEdit: I am getting so many nice suggestions, but none have addressed the method.",
  "lastActivityDate": "2014-12-01T00:56:00.430",
  "title": "Would this method work to scale out SQL queries?",
  "tags": [
    "sql",
    "database",
    "parallel-processing",
    "dbms"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201412",
  "itemTally": 0,
  "owner": null
}