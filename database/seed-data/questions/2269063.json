{
  "id": "/questions/2269063",
  "creationDate": "2014-02-18T13:29:39.890",
  "body": "\n\nI have a generic growing buffer indended to accumulate \"random\" string pieces and then fetch the result. [Code](http://github.com/agladysh/luabins/blob/060439a91f8c0da9a968484e1cab4ae7983cf238/src/savebuffer.c) to handle that buffer is written in plain C.\n\nPseudocode API:\n\n\tvoid write(buffer_t * buf, const unsigned char * bytes, size_t len);/* appends */\n\tconst unsigned char * buffer(buffer_t * buf);/* returns accumulated data */\n\t\n\nI'm thinking about the growth strategy I should pick for that buffer.\n\nI do not know if my users would prefer memory or speed — or what would be the nature of user's data.\n\nI've seen two strategies in the wild: grow buffer by fixed size increments (that is what I've currently implemented) or grow data exponentially. (There is also a strategy to allocate the exact amount of memory needed — but this is not that interesting in my case.) \n\nPerhaps I should let user to pick the strategy... But that would make code a bit more complex...\n\nOnce upon a time, Herb Sutter [wrote](http://www.gotw.ca/gotw/043.htm) (referencing Andrew Koenig) that the best strategy is, probably, exponential growth with factor 1.5 (search for \"Growth Strategy\"). Is this still the best choice?\n\nAny advice? What does your experience say?",
  "lastActivityDate": "2014-02-18T15:29:08.030",
  "title": "Buffer growth strategy",
  "tags": [
    "c",
    "buffer"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201402",
  "itemTally": 0,
  "owner": null
}