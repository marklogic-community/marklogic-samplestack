{
  "id": "/questions/2648438",
  "creationDate": "2014-04-18T03:40:08.113",
  "body": "\n\nI have a data type that contains a set and a method that expects `List<? extends MyClass>`.  The data type has `Set<? extends MyClass>`.  I need to be able to move the stuff out of the set and into the List.  The order it goes into the list doesn't matter, it just needs to start keeping track of it so that it can be reordered when displayed.  Suffice to say that changing the Set into a List in the data type is out of the question here.  \n\nThis seems pretty easy at first.  Create a new method that takes a Set instead of a List, changes it into a list and then passes it on to the old method that just took a list.  The problem comes in changing the set to a list.\n\n\tpublic void setData(Set<? extends MyClass> data) {\n\t    List<? extends Myclass> newData = ArrayList< /* What goes here? */ >();\n\t    for(ConcordaEntityBean o : data) {\n\t        newData.add(o);\n\t     }\n\t     setData(newData);\n\t}\n\t\n\nObviously, I can't instantiate an ArrayList with a wildcard, it chokes.  I don't know the type at that point.  Is there some way to pull the type out of data and pass it to ArrayList?  Can I just instantiate it with `MyClass`?  Is there some other way to do this?",
  "lastActivityDate": "2014-04-18T03:53:15.687",
  "title": "Transfering a Set with a Wildcarded Generic to a List in Java",
  "tags": [
    "java",
    "generics"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201404",
  "itemTally": 0,
  "owner": null
}