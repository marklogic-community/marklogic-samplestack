{
  "id": "/questions/2267984",
  "creationDate": "2014-02-18T10:13:26.200",
  "body": "\n\nI am working on a plugin system where plugin modules are loaded like this: \n\n\tdef load_plugins():\n\t   plugins=glob.glob(\"plugins/*.py\")\n\t   instances=[]\n\t   for p in plugins:\n\t      try:\n\t         name=p.split(\"/\")[-1]\n\t         name=name.split(\".py\")[0]\n\t         log.debug(\"Possible plugin: %s\", name)\n\t         f, file, desc=imp.find_module(name, [\"plugins\"])\n\t         plugin=imp.load_module('plugins.'+name, f, file, desc)\n\t         getattr(plugin, \"__init__\")(log)\n\t         instances=instances+plugin.get_instances()\n\t      except Exception as e:\n\t         log.info(\"Failed to load plugin: \"+str(p))\n\t         log.info(\"Error: %s \" % (e))\n\t         log.info(traceback.format_exc(e))\n\t   return instances\n\t\n\nThe code works, but for each import statement in the plugin code i get a warning like this: \n\n\tplugins/plugin.py:2: RuntimeWarning: Parent module 'plugins' not found while handling absolute import\n\t  import os\n\t\n\nNo errors are reported for the main program code, and the plugins work.\n\nCan somebody explain what the warning means and what I doing wrong. Do I need to create an empty plugins module separately and import it to keep python happy?",
  "lastActivityDate": "2014-02-18T16:01:03.080",
  "title": "Dynamic class loading in Python 2.6: RuntimeWarning: Parent module 'plugins' not found while handling absolute import",
  "tags": [
    "python",
    "plugins",
    "import",
    "dynamic-class-loaders"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201402",
  "itemTally": 0,
  "owner": null
}