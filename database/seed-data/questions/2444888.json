{
  "id": "/questions/2444888",
  "creationDate": "2014-03-17T11:14:15.393",
  "body": "\n\nI have a web service in which I am manipulating POST and GET methods to facilitate upload / download functionality for some files in a client/server style architecture. Basically the user is able to click a button to download a specific file, make some changes in the app, then click upload button to send it back.\n\nProblem I am having is with the download. Say the user expects 3 files 1.txt, 2.txt and 3.txt. Except 2.txt does not exist on the server.\n\nSo I have code like (on server side):\n\n\tpublic class HttpHandler : IHttpHandler\n\t{\n\t\n\t    public void ProcessRequest\n\t    {\n\t       if (context.Request.HttpMethod == \"GET\")\n\t       {\n\t          GoGetIt(context)\n\t       }\n\t    }\n\t\n\tprivate static void GoGetIt(HttpContext context)\n\t{\n\t     var fileInfoOfWhereTheFileShouldBe = new FileInfo(......);\n\t\n\t     if (!fileInfoOfWhereTheFileShouldBe.RefreshExists())\n\t     {\n\t          //Remove this line below\n\t          //throw new Exception(\"Oh dear the file doesn't exist\");\n\t\n\t          //Replace with a force return of whichever code I chose e.g. 200\n\t          ??...\n\t     }\n\t\n\t    ...\n\t\n\nSo the problem I have is that when I run the application, and I use a WebClient on client side to use DownloadFile method which then uses the code I have above, I get: \n\nWebException was unhandled: The remote server returned an error: (500) Internal Server Error.\n\n(While debugging) If I attach to the browser and use `http://localhost:xxx/1.txt` I can step through server side code and throw the exception as intended. So I guess I'm wondering how I can handle the internal server error on the client side properly so I can return something meaningful like \"File doesn't exist\". One thought was to use a try catch around the `WebClient.DownloadFile(address, filename)` method but i'm not sure thats the only error that will occur i.e. the file doesn't exist.\n\n**edit: following the solution using HttpResponse**\n\nSo if I were to use HttpResponse, could I get some suggestions as how to start?\n\nI remove the exception throw from the client side, and replace with custom HttpResponse? So basically I guess I would chose a code to use, say 200, and force return code 200 in that if statement above. See comment.\n\nThen on client side just use `If (Response.StatusCode == 200)` and do whatever I want to do (inform user file doesn't exist )\n\nI'm along the right lines?\n\n**edit 2:**\n\nI've been trying using a try catch around my file copy methods, then in the catch, setting the status code or status description but this throws exceptions when setting the status description.. like this:\n\n\tcontext.Response.StatusDescription = ex.ToString();\n\tcontext.Response.Status = ex.ToString();\n\t\n\nArgumentOutOfRangeException - specified argument was out of the range of valid values.",
  "lastActivityDate": "2014-03-25T17:12:12.803",
  "title": "Webclient using download file to grab file from server - handling exceptions",
  "tags": [
    "c#",
    ".net",
    "visual-studio-2008",
    "webclient",
    "ihttphandler"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201403",
  "itemTally": 0,
  "owner": null
}