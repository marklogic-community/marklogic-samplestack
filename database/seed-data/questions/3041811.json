{
  "id": "/questions/3041811",
  "creationDate": "2014-06-17T08:18:56.640",
  "body": "\n\nI have this code example, but I don't understand why changing the values in the array inside \n`outputUsingArray()` are changing the original array.\n\nI would have expected changing the values of the array in `outputUsingArray()` would only be for a local copy of the array.\n\nWhy isn't that so?\n\nHowever, this is the behaviour I would like, but I don't understand why it work.\n\n\t#include <stdlib.h>\n\t#include <stdio.h>\n\tvoid outputUsingArray(int array[][4], int n_rows, int n_cols) {\n\t  int i, j;\n\t\n\t  printf(\"Output Using array\\n\");\n\t  for (i = 0; i < n_rows; i++) {\n\t    for (j = 0; j < n_cols; j++) {\n\t      // Either can be used.\n\t      //printf(\"%2d \", array[i][j] );\n\t      printf(\"%2d \", *(*(array+i)+j));\n\t    }\n\t    printf(\"\\n\");\n\t  }\n\t  printf(\"\\n\");\n\t\n\t  array[0][0] = 100;\n\t  array[2][3] = 200;\n\t\n\t}\n\t\n\tvoid outputUsingPointer(int (*array)[4], int n_rows, int n_cols) {\n\t  int i, j;\n\t\n\t  printf(\"Output Using Pointer to Array i.e. int (*array)[4]\\n\");\n\t  for (i = 0; i < n_rows; i++) {\n\t    for (j = 0; j < n_cols; j++) {\n\t      printf(\"%2d \", *(*(array+i) + j ));\n\t    }\n\t    printf(\"\\n\");\n\t  }\n\t  printf(\"\\n\");\n\t}\n\t\n\tint main() {\n\t\n\t  int array[3][4] = { { 0, 1, 2, 3 },\n\t              { 4, 5, 6, 7 },\n\t              { 8, 9, 10, 11 } };\n\t\n\t  outputUsingPointer((int (*)[4])array, 3, 4);\n\t\n\t  outputUsingArray(array, 3, 4);\n\t\n\t  printf(\"0,0: %i\\n\", array[0][0]);\n\t  printf(\"2,3: %i\\n\", array[2][3]);\n\t\n\t  return 0;\n\t}\n\t",
  "lastActivityDate": "2014-09-25T23:19:04.583",
  "title": "Pointer to 2D array. Why does this example work?",
  "tags": [
    "c++",
    "c"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201409",
  "itemTally": 0,
  "owner": null
}