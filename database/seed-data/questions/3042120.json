{
  "id": "/questions/3042120",
  "creationDate": "2014-06-17T10:10:34.400",
  "body": "\n\nIt is said that when we handle a \"click event\", returning false or calling event.preventDefault() makes a difference, in which \n\n> the difference is that preventDefault\n  will only prevent the default event\n  action to occur, i.e. a page redirect\n  on a link click, a form submission,\n  etc. and return false will also stop\n  the event flow.\n\nDoes that mean, if the click event is registered several times for several actions, using\n\n\t$('#clickme').click(function() { … })\n\t\n\nreturning false will stop the other handlers from running?\n\nI am on a Mac now and so can only use Firefox and Chrome but not IE, which has a different event model, and tested it on FF and Chrome by adding 3 handlers, and all 3 handlers ran without any stopping…. so what is the real difference, or, is there a situation where \"stopping the event flow\" is not desirable?\n\nthis is related to\n\n[http://stackoverflow.com/questions/3042036/using-jquerys-animate-if-the-clicked-on-element-is-a-href-a](http://stackoverflow.com/questions/3042036/using-jquerys-animate-if-the-clicked-on-element-is-a-href-a)\n\nand\n\n[http://stackoverflow.com/questions/2017755/whats-the-difference-between-e-preventdefault-and-return-false](http://stackoverflow.com/questions/2017755/whats-the-difference-between-e-preventdefault-and-return-false)",
  "lastActivityDate": "2014-05-12T16:27:23.287",
  "title": "In Javascript event handling, why \"return false\" or \"event.preventDefault()\" and \"stopping the event flow\" will make a difference?",
  "tags": [
    "javascript",
    "jquery",
    "javascript-events",
    "event-handling"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201405",
  "itemTally": 0,
  "owner": null
}