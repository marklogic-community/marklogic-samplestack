{
  "id": "/questions/2451161",
  "creationDate": "2014-03-18T07:21:04.207",
  "body": "\n\nFor a utility I'm working on, the client would like to be able to generate graphic reports on the data that has been collected.  I can already generate a couple canned graphs (using ZedGraph, which is a very nice library); however, the utility would be much more flexible if the graphs were more programmable or configurable by the end-user.\n\n#TLDR version\n\nI want users to be able to use something like SQL to **safely** extract and select data from a List of objects that I provide and can describe.  What free tools or libraries will help me accomplish this?\n\n#Full version\n\nI've given thought to using IronPython, IronRuby, and LuaInterface, but frankly they're all a bit overpowered for what I want to do.  My classes are fairly simple, along the lines of:\n\n\tclass Person:\n\t    string Name;\n\t    int HeightInCm;\n\t    DateTime BirthDate;\n\t    Weight[] WeighIns;\n\t\n\tclass Weight:\n\t    int WeightInKg;\n\t    DateTime Date;\n\t    Person Owner;\n\t\n\n(exact classes have been changed to protect the innocent).\n\nTo come up with the data for the graph, the user will choose whether it's a bar graph, scatter plot, etc., and then to actually obtain the data, I would like to obtain some kind of List from the user simply entering something SQL-ish along the lines of\n\n\tSELECT Name, AVG(WeighIns) FROM People\n\tSELECT WeightInKg, Owner.HeightInCm FROM Weights\n\t\n\nAnd as a bonus, it would be nice if you could actually do operations as well:\n\n\tSELECT WeightInKg, (Date - Owner.BirthDate) AS Age FROM Weights\n\t\n\nThe DSL doesn't have to be compliant SQL in any way; it doesn't even have to resemble SQL, but I can't think of a more efficient descriptive language for the task.\n\nI'm fine filling in blanks; I don't expect a library to do *everything* for me.  What I would expect to exist (but haven't been able to find in any way, shape, or form) is something like Fluent NHibernate (which I am already using in the project) where I can declare a mapping, something like\n\n\tvar personRequest = Request<Person>();\n\tpersonRequest.Item(\"Name\", (p => p.Name));\n\tpersonRequest.Item(\"HeightInCm\", (p => p.HeightInCm));\n\tpersonRequest.Item(\"HeightInInches\", (p => p.HeightInCm * CM_TO_INCHES));\n\t// ...\n\tvar weightRequest = Request<Weight>();\n\tweightRequest.Item(\"Owner\", (w => w.Owner), personRequest); // Indicate a chain to personRequest\n\t// ...\n\tvar people = Table<Person>(\"People\", GetPeopleFromDatabase());\n\tvar weights = Table<Weight>(\"Weights\", GetWeightsFromDatabase());\n\t// ...\n\tTryRunQuery(userInputQuery);\n\t\n\nLINQ is *so* close to what I want to do, but AFAIK there's no way to sandbox it.  I don't want to expose any unnecessary functionality to the end user; meaning I don't want the user to be able to send in and process:\n\n\tfrom p in people select (p => { System.IO.File.Delete(\"C:\\\\something\\\\important\"); return p.Name })\n\t\n\nSo does anyone know of any free .NET libraries that allow something like what I've described above?  Or is there some way to sandbox LINQ?  `cs-script` is close too, but it doesn't seem to offer sandboxing yet either.  I'd be hesitant to expose the NHibernate interface either, as the user should have a read-only view of the data at this point in the usage.\n\nI'm using C# 3.5, and pure .NET solutions would be preferred.\n\nThe bottom line is that I'm really trying to avoid writing my own parser for a subset of SQL that would only apply to this single project.",
  "lastActivityDate": "2014-03-20T05:51:16.897",
  "title": "LINQ-like or SQL-like DSL for end-users to run queries to select (not modify) data?",
  "tags": [
    "c#",
    ".net",
    "linq",
    "dsl"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201403",
  "itemTally": 0,
  "owner": null
}