{
  "id": "/questions/2644749",
  "creationDate": "2014-04-17T19:20:30.407",
  "body": "\n\nI'm running a unit test using the Django framework and get this error.\n\nRunning the actual code does not have this problem, running the unit tests creates a test database on the fly so I suspect the issue lies there.\n\nThe code that throws the error looks like this\n\n\tmember = Member.objects.get(email=email_address)\n\t\n\nand the model looks like\n\n\tclass Member(models.Model):\n\t    member_id = models.IntegerField(primary_key=True)\n\t    created_on = models.DateTimeField(editable=False, default=datetime.datetime.utcnow())\n\t    flags = models.IntegerField(default=0)\n\t    email = models.CharField(max_length=150, blank=True)\n\t    phone = models.CharField(max_length=150, blank=True)\n\t    country_iso = models.CharField(max_length=6, blank=True)\n\t    location_id = models.IntegerField(null=True, blank=True)\n\t    facebook_uid = models.IntegerField(null=True, blank=True)\n\t    utc_offset = models.IntegerField(null=True, blank=True)\n\t    tokens = models.CharField(max_length=3000, blank=True)\n\t    class Meta:\n\t        db_table = u'member'\n\t\n\nthere's nothing too odd there i can see.\n\nthe user running the tests has the same permissions to the database server as the user that runs the website\n\nthis is django 1.1 on mariadb running on osx\n\n\t    MJ-2:mysite Marsh$ python manage.py test sitecoming\n\tCreating test database...\n\tCreating table django_content_type\n\tCreating table django_session\n\tCreating table django_site\n\tCreating table djangodblog_errorbatch\n\tCreating table djangodblog_error\n\tInstalling index for djangodblog.ErrorBatch model\n\tInstalling index for djangodblog.Error model\n\tE\n\t======================================================================\n\tERROR: test_index (mysite.sitecoming.tests.SiteComingTest)\n\t----------------------------------------------------------------------\n\tTraceback (most recent call last):\n\t  File \"/Users/Marsh/Development/deal/src/mysite/sitecoming/tests.py\", line 19, in test_index\n\t    response = c.post('/submit', {'email':'marshall@offby3.com'})\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/test/client.py\", line 313, in post\n\t    response = self.request(**r)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/core/handlers/base.py\", line 92, in get_response\n\t    response = callback(request, *callback_args, **callback_kwargs)\n\t  File \"/Users/Marsh/Development/deal/src/mysite/sitecoming/views.py\", line 49, in submit\n\t    member = Member.objects.get(email=email_address)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/models/manager.py\", line 120, in get\n\t    return self.get_query_set().get(*args, **kwargs)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/models/query.py\", line 300, in get\n\t    num = len(clone)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/models/query.py\", line 81, in __len__\n\t    self._result_cache = list(self.iterator())\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/models/query.py\", line 238, in iterator\n\t    for row in self.query.results_iter():\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/models/sql/query.py\", line 287, in results_iter\n\t    for rows in self.execute_sql(MULTI):\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/models/sql/query.py\", line 2369, in execute_sql\n\t    cursor.execute(sql, params)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/django/db/backends/mysql/base.py\", line 84, in execute\n\t    return self.cursor.execute(query, args)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/MySQL_python-1.2.3c1-py2.6-macosx-10.3-fat.egg/MySQLdb/cursors.py\", line 173, in execute\n\t    self.errorhandler(self, exc, value)\n\t  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/MySQL_python-1.2.3c1-py2.6-macosx-10.3-fat.egg/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n\t    raise errorclass, errorvalue\n\tProgrammingError: (1146, \"Table 'test_deal.member' doesn't exist\")\n\t\n\t----------------------------------------------------------------------\n\tRan 1 test in 0.447s\n\t\n\tFAILED (errors=1)\n\tDestroying test database...\n\t\n\nwhere else can I look to see what's going wrong, why is this table not being created?\n\n**update** - the issue seems to be that when running the unit tests the models that are used to generate the test database come from inside the application instead of from inside the project. this seems like odd behaviour and a violation of DRY in that in order to make it work i need to duplicate the model file in each application instead of centrally in the project.\n\ncan anyone suggest how to work around this?\n\n** update 2 ** - project structure looks like this:\n\nproject structure looks like:\n\n\t/mysite (www.whatever.com)\n\t    /application1 (facebook app, handles all urls beginning with /fb)\n\t    /application2 (www app, handles everything else in the root dir of the site)\n\t\n\ni want to keep fb functionality separate from the rest of the site but they share the same db. am i doing it wrong?",
  "lastActivityDate": "2014-12-10T03:20:24.567",
  "title": "ProgrammingError: (1146, \"Table 'test_<DB>.<TABLE>' doesn't exist\") when running unit test for Django",
  "tags": [
    "python",
    "django",
    "unit-testing"
  ],
  "docScore": 0,
  "comments": [],
  "answers": [],
  "creationYearMonth": "201412",
  "itemTally": 0,
  "owner": null
}