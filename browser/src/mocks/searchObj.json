{"criteria":{"q":null,"constraints":{"resolved":{"constraintName":"resolved","constraintType":"value","type":"boolean","queryStringName":"resolved","value":null},"userName":{"constraintName":"userName","constraintType":"value","type":"text","queryStringName":"contributor","value":null},"tags":{"constraintName":"tag","constraintType":"range","type":"enum","subType":"value","queryStringName":"tags","values":null},"dateStart":{"constraintName":"lastActivity","constraintType":"range","type":"date","operator":"GE","queryStringName":"date-start"},"dateEnd":{"constraintName":"lastActivity","constraintType":"range","type":"date","operator":"LE","queryStringName":"date-end"}}},"results":{"snippet-format":"raw","total":5,"start":1,"page-length":10,"facets":{"tags":{"algorithm":{"name":"algorithm","count":2,"value":"algorithm","shadow":{"name":"algorithm","count":2,"value":"algorithm"}},"c++":{"name":"c++","count":2,"value":"c++","shadow":{"name":"c++","count":2,"value":"c++"}},"search":{"name":"search","count":2,"value":"search","shadow":{"name":"search","count":2,"value":"search"}},"visual-c++":{"name":"visual-c++","count":2,"value":"visual-c++","shadow":{"name":"visual-c++","count":2,"value":"visual-c++"}},"debugging":{"name":"debugging","count":1,"value":"debugging","shadow":{"name":"debugging","count":1,"value":"debugging"}},"jmeter":{"name":"jmeter","count":1,"value":"jmeter","shadow":{"name":"jmeter","count":1,"value":"jmeter"}},"methodology":{"name":"methodology","count":1,"value":"methodology","shadow":{"name":"methodology","count":1,"value":"methodology"}},"pycharm":{"name":"pycharm","count":1,"value":"pycharm","shadow":{"name":"pycharm","count":1,"value":"pycharm"}},"python":{"name":"python","count":1,"value":"python","shadow":{"name":"python","count":1,"value":"python"}},"regex":{"name":"regex","count":1,"value":"regex","shadow":{"name":"regex","count":1,"value":"regex"}}},"dates":{"201403":{"name":"201403","count":1,"value":"201403"},"201404":{"name":"201404","count":1,"value":"201404"},"201406":{"name":"201406","count":1,"value":"201406"},"201408":{"name":"201408","count":2,"value":"201408"}}},"query":{"and-query":[]},"qtext":null,"report":"(cts:search(fn:collection(), cts:and-query(cts:directory-query(\"/questions/\", \"infinity\"), ()), (\"unfiltered\",\"faceted\"), 1))[1 to 10]","metrics":{"query-resolution-time":"PT0.003626S","facet-resolution-time":"PT0.002062S","snippet-resolution-time":"PT0.000444S","total-time":"PT0.041051S"},"items":[{"index":1,"uri":"/questions/20875754.json","path":"fn:doc(\"/questions/20875754.json\")","score":0,"confidence":0,"fitness":0,"href":"/v1/documents?uri=%2Fquestions%2F20875754.json","mimetype":"application/json","format":"json","content":{"id":"20875754","acceptedAnswerId":"20875780","creationDate":"2014-01-04T19:13:23.613","body":"\n\nI am trying to use regular expression in Jmeter where in I need to unmatch a particular string. Here is my input test string : <activationCode>insvn</activationCode>\n\nI need to extract the code insvn from it. I tried using the expression :\n[^/<activationCode>]\\w+, but does not yield the required code. I am a newbie to regular expression and i need help with this.","lastActivityDate":"2014-04-11T05:42:56.209","title":"Regular Expression to unmatch a particular string","tags":["regex","jmeter"],"docScore":0,"comments":[],"answers":[{"id":"20875780","creationDate":"2014-01-02T03:16:53.707","body":"\n\nCan you use look-behind assertion in jmeter? If so, you can use thatr regex which will give you a word that follows `<activationCode>`\n\n\t(?<=\\<activationCode\\>)\\w+\n\t\n\nIf your input string is encoded (e.g for HTML), use:\n\n\t(?<=\\&lt;activationCode\\&gt;)\\w+\n\t","accepted":true,"comments":[{"id":"31326048","text":"There's plenty of resources but I'm afraid I don't know any particular one that's good for beginners.","creationDate":"2014-01-02T03:45:24.073","commenter":{"displayName":"Szymon","id":"240646"}},{"id":"31325940","text":"See me edit for an encoded regex","creationDate":"2014-01-02T03:36:33.043","commenter":{"displayName":"Szymon","id":"240646"}},{"id":"31326032","text":"thanks szymon.. it helped a lot.. i need to explore regex extensively.. i just started to use it yesterday.. do u wish to refer me to some bookd or sites which are good at regex for a beginner and then move onto complex ones?? Thanks in advance :)","creationDate":"2014-01-02T03:44:00.653","commenter":{"displayName":"user3151437","id":"3151437"}},{"id":"31325906","text":"Actually the input test string is somewhat odd like this : &lt;activationCode&gt;ybwg1f&lt;/activationCode&gt;  from which i need to get that code.. when i typed it in the question field it converted itself to a html tag","creationDate":"2014-01-02T03:33:42.513","commenter":{"displayName":"user3151437","id":"3151437"}}],"itemTally":0,"owner":{"displayName":"Szymon","id":"240646"}},{"id":"20875799","creationDate":"2014-01-02T03:19:11.587","body":"\n\nWhen designing a regular expression in any language for something like this you can match your input string as three groups: (the opening tag, the content, and the closing tag) then select the content from the second group.","accepted":false,"comments":[],"itemTally":0,"owner":{"displayName":"norlesh","id":"263399"}}],"creationYearMonth":"201404","itemTally":0,"owner":{"displayName":"user3151437","id":"3151437"}},"$$hashKey":"03V"},{"index":2,"uri":"/questions/20911599.json","path":"fn:doc(\"/questions/20911599.json\")","score":0,"confidence":0,"fitness":0,"href":"/v1/documents?uri=%2Fquestions%2F20911599.json","mimetype":"application/json","format":"json","content":{"id":"20911599","acceptedAnswerId":"20912770","creationDate":"2014-01-06T11:49:45.943","body":"\n\nI'm working in PyCharm 3.0.2 using WinPython 2.7.5.3 when running my unit test in debug mode all of them are passing. However if I run them normally I have one that fails - specifically the result of the code below returns an extra unexpected item in the result list.\n\nThis is the failed test:\n\n\tdef test4(self):\n\t        bz = BezNet()\n\t\n\t        bz.insert([P(1, 1), P(2, 3)])\n\t        bz.insert([P(1, 10), P(2, 30)])\n\t\n\t        nodes = [n for n in bz.nodes]\n\t        self.assertEqual(len(nodes), 4)\n\t        edges = [e for e in bz.edges]\n\t        self.assertEqual(len(edges), 2)\n\t\n\t        bbzz = bz.separate()\n\t        self.assertEqual(len(bbzz), 2) # assertioin fails (len==3) but ONLY in run mode\n\t\n\nThis is an excerpt of the part of the class `BezNet` being tested.\n\n\t....\n\tdef _visit(self, a, nodes, edges):\n\t    if a in nodes:\n\t        return None\n\t    for b in a._out:\n\t        edges[a, b] = self._edges[a, b]\n\t        self._visit(b, nodes, edges)\n\t    nodes.add(a)\n\t\n\tdef separate(self):\n\t    result = []\n\t    while len(self._nodes):\n\t        nodes = set()\n\t        edges = {}\n\t        for x in self._nodes:\n\t            start = x\n\t            break\n\t\n\t        self._visit(start, nodes, edges)\n\t        part = BezNet()\n\t        part._nodes = nodes\n\t        self._nodes.difference_update(nodes)\n\t        part._edges = edges\n\t        for e in edges:\n\t            del self._edges[e]\n\t        result.append(part)\n\t\n\t    return result\n\t....\n\t\n\nThe rest of the class is rather large so I won't include it here unless someone thinks it could be at fault in which case I will edit. [I'm not looking for a solution to the bug in my code yet, just how to go about tracking it when the tools are playing up]\n\nMy question is what could be happening under the hood to be causing this and what strategies one could use to go about tracing the problem?","lastActivityDate":"2014-03-11T05:42:56.227","title":"Strategy for debugging a python unittest assertion that only fails when not debugging","tags":["python","debugging","pycharm","methodology"],"docScore":0,"comments":[],"answers":[{"id":"20912770","creationDate":"2014-01-03T21:12:56.480","body":"\n\nIn this particular circumstance the Heisenbug was due to the arbitrary ordering when the `set` type is iterated which happens to be repeatable but different between run and debug modes see [this discussion](http://stackoverflow.com/questions/3848091/python-set-iteration-order-varies-from-run-to-run)... My bad.\n\n*In the end the solution came from copious print statements and waiting for that flash of inspiration of what documentation to double check.*","accepted":true,"comments":[],"itemTally":0,"owner":{"displayName":"norlesh","id":"263399"}}],"creationYearMonth":"201403","itemTally":0,"owner":{"displayName":"norlesh","id":"263399"}},"$$hashKey":"03W"},{"index":3,"uri":"/questions/832aff36-0032-47ac-bbce-3a5ec1a31f6e.json","path":"fn:doc(\"/questions/832aff36-0032-47ac-bbce-3a5ec1a31f6e.json\")","score":0,"confidence":0,"fitness":0,"href":"/v1/documents?uri=%2Fquestions%2F832aff36-0032-47ac-bbce-3a5ec1a31f6e.json","mimetype":"application/json","format":"json","content":{"title":"Question from contributor","text":"I ask questions","tags":["tag1","tag2"],"id":"832aff36-0032-47ac-bbce-3a5ec1a31f6e","creationDate":"2014-08-12T16:03:27.850584-07:00","creationYearMonth":"201408","docScore":0,"itemTally":0,"comments":[],"answers":[{"text":"here's an answer for ya","id":"32939857-5ef0-4a14-a4c5-a77b8bd8ace1","itemTally":0,"comments":[],"owner":{"displayName":"joeUser","id":"cf99542d-f024-4478-a6dc-7e723a51b040","userName":"joeUser@marklogic.com"},"accepted":true}],"owner":{"userName":"joeUser@marklogic.com","id":"cf99542d-f024-4478-a6dc-7e723a51b040","displayName":"joeUser"},"lastActivityDate":"2014-08-12T16:03:27.850584-07:00","acceptedAnswerId":"32939857-5ef0-4a14-a4c5-a77b8bd8ace1"},"$$hashKey":"03X"},{"index":4,"uri":"/questions/3bb58db7-a2f3-401c-8515-469376c0520d.json","path":"fn:doc(\"/questions/3bb58db7-a2f3-401c-8515-469376c0520d.json\")","score":0,"confidence":0,"fitness":0,"href":"/v1/documents?uri=%2Fquestions%2F3bb58db7-a2f3-401c-8515-469376c0520d.json","mimetype":"application/json","format":"json","content":{"id":"qna3bb58db7-a2f3-401c-8515-469376c0520d","acceptedAnswerId":"answer20868049","creationDate":"2014-01-03T16:22:43.947","body":"\n\nJust like the title says, I've been working on a fairly large program and have come upon this bug. I'm also open to alternatives for searching a file for a string instead of using . Here is my code narrowed down:\n\n\tistreambuf_iterator<char> eof;\n\tifstream fin;\n\tfin.clear();\n\t\n\tfin.open(filename.c_str());\n\t\n\tif(fin.good()){\n\t //I outputted text to a file to make sure opening the file worked, which it does\n\t}\n\t\n\t//term was not found.\n\tif(eof == search(istreambuf_iterator<char>(fin), eof, term.begin(), term.end()){\n\t   //PROBLEM: this code always executes even when the string term is in the file.\n\t}\n\t\n\nSo just to clarify, my program worked correctly in Linux but now that I have it in a win32 app project in vs2010, the application builds just fine but the search function isn't working like it normally did. (What I mean by normal is that the code in the if statement didn't execute because, where as now it always executes.)\n\nNOTE: The file is a .xml file and the string term is simply \"administration.\"\n\nOne thing that might or might not be important is to know that filename (filename from the code above) is a XML file I have created in the program myself using the code below. Pretty much I create an identical xml file form the pre-existing one except for it is all lower case and in a new location.\n\n\tvoid toLowerFile(string filename, string newloc, string& newfilename){\n\t  //variables\n\t  ifstream fin;\n\t  ofstream fout;\n\t  string temp = \"/\";\n\t  newfilename = newloc + temp + newfilename;\n\t  //open file to read\n\t  fin.open(filename.c_str());\n\t    //open file to write\n\t    fout.open(newfilename.c_str());\n\t    //loop through and read line, lower case, and write\n\t    while (fin.good()){\n\t      getline (fin,temp);\n\t        //write lower case version\n\t        toLowerString(temp);\n\t        fout << temp << endl;\n\t    }\n\t    //close files\n\t    fout.close();\n\t    fin.close();\n\t}\n\t\n\tvoid toLowerString(string& data){\n\t    std::transform(data.begin(), data.end(), data.begin(), ::tolower);\n\t}\n\t","lastActivityDate":"2014-06-04T02:14:06.130","title":"Brought a Linux C++ Console Application to a Win32 C++ App using VS2010 and the search function from <algorithm> is no longer working","tags":["c++","algorithm","visual-c++","search"],"docScore":0,"comments":[],"answers":[{"id":"answer20864966","creationDate":"2014-01-01T02:05:49.973","body":"\n\nGenerally, with Microsoft's compiler, if your program compiles and links a main() function rather than a wmain() function, everything defaults to char. It would be wchar_t or WCHAR if you have a wmain().  If you have tmain() instead, then you are at the mercy of your compiler/make settings and it's the UNICODE macro that determines which flavor your program uses.  But I doubt that char_t/wchar_t mismatch is actually the issue here because I think you would have got an warning or error if all four of the search parameters didn't use the same the same character width.\n\nThis is a bit of a guess, but try this:\n\n\tif(eof == search(istreambuf_iterator<char>(fin.rdbuf()), eof, term.begin(), term.end())\n\t","accepted":false,"comments":[{"id":"31305027","text":"Thank you. Unfortunately still a no go, but after the responses I'm getting I'm going to edit my original question and add something I feel is important which I didn't realize before. I created a win32 app project (non empty) without any bells and whistles checked so my main is _TWinMain. Also the file I'm reading I create in the program myself. I tried your solution with both WChar on and off and still nothing.","creationDate":"2014-01-01T02:18:29.190","commenter":null}],"itemTally":0,"owner":null},{"id":"answer20868049","creationDate":"2014-01-01T11:14:06.130","body":"\n\nI'm afraid your code is invalid - the `search` algorithm requires forward iterators, but `istreambuf_iterator` is only an input iterator.\n\nConceptually that makes sense - the algorithm needs to backtrack on a partial match, but the stream may not support backtracking.\n\nThe actual behaviour is undefined - so the implementation is allowed to be helpful and make it seem to work, but doesn't have to.\n\nI think you either need to copy the input, or use a smarter search algorithm (single-pass is possible) or a smarter iterator.\n\n(In an ideal world at least one of the compilers would have warned you about this.)","accepted":true,"comments":[],"itemTally":0,"owner":null}],"itemTally":0,"owner":null,"creationYearMonth":"201406"},"$$hashKey":"03Y"},{"index":5,"uri":"/questions/20864512.json","path":"fn:doc(\"/questions/20864512.json\")","score":0,"confidence":0,"fitness":0,"href":"/v1/documents?uri=%2Fquestions%2F20864512.json","mimetype":"application/json","format":"json","content":{"id":"20864512","acceptedAnswerId":"20868049","creationDate":"2014-01-03T16:22:43.947","body":"\n\nJust like the title says, I've been working on a fairly large program and have come upon this bug. I'm also open to alternatives for searching a file for a string instead of using . Here is my code narrowed down:\n\n\tistreambuf_iterator<char> eof;\n\tifstream fin;\n\tfin.clear();\n\t\n\tfin.open(filename.c_str());\n\t\n\tif(fin.good()){\n\t //I outputted text to a file to make sure opening the file worked, which it does\n\t}\n\t\n\t//term was not found.\n\tif(eof == search(istreambuf_iterator<char>(fin), eof, term.begin(), term.end()){\n\t   //PROBLEM: this code always executes even when the string term is in the file.\n\t}\n\t\n\nSo just to clarify, my program worked correctly in Linux but now that I have it in a win32 app project in vs2010, the application builds just fine but the search function isn't working like it normally did. (What I mean by normal is that the code in the if statement didn't execute because, where as now it always executes.)\n\nNOTE: The file is a .xml file and the string term is simply \"administration.\"\n\nOne thing that might or might not be important is to know that filename (filename from the code above) is a XML file I have created in the program myself using the code below. Pretty much I create an identical xml file form the pre-existing one except for it is all lower case and in a new location.\n\n\tvoid toLowerFile(string filename, string newloc, string& newfilename){\n\t  //variables\n\t  ifstream fin;\n\t  ofstream fout;\n\t  string temp = \"/\";\n\t  newfilename = newloc + temp + newfilename;\n\t  //open file to read\n\t  fin.open(filename.c_str());\n\t    //open file to write\n\t    fout.open(newfilename.c_str());\n\t    //loop through and read line, lower case, and write\n\t    while (fin.good()){\n\t      getline (fin,temp);\n\t        //write lower case version\n\t        toLowerString(temp);\n\t        fout << temp << endl;\n\t    }\n\t    //close files\n\t    fout.close();\n\t    fin.close();\n\t}\n\t\n\tvoid toLowerString(string& data){\n\t    std::transform(data.begin(), data.end(), data.begin(), ::tolower);\n\t}\n\t","lastActivityDate":"2014-08-11T05:42:56.208","title":"Brought a Linux C++ Console Application to a Win32 C++ App using VS2010 and the search function from <algorithm> is no longer working","tags":["c++","algorithm","visual-c++","search"],"docScore":3,"comments":[],"answers":[{"id":"20864966","creationDate":"2014-01-01T02:05:49.973","body":"\n\nGenerally, with Microsoft's compiler, if your program compiles and links a main() function rather than a wmain() function, everything defaults to char. It would be wchar_t or WCHAR if you have a wmain().  If you have tmain() instead, then you are at the mercy of your compiler/make settings and it's the UNICODE macro that determines which flavor your program uses.  But I doubt that char_t/wchar_t mismatch is actually the issue here because I think you would have got an warning or error if all four of the search parameters didn't use the same the same character width.\n\nThis is a bit of a guess, but try this:\n\n\tif(eof == search(istreambuf_iterator<char>(fin.rdbuf()), eof, term.begin(), term.end())\n\t","accepted":false,"comments":[{"id":"31305027","text":"Thank you. Unfortunately still a no go, but after the responses I'm getting I'm going to edit my original question and add something I feel is important which I didn't realize before. I created a win32 app project (non empty) without any bells and whistles checked so my main is _TWinMain. Also the file I'm reading I create in the program myself. I tried your solution with both WChar on and off and still nothing.","creationDate":"2014-01-01T02:18:29.190","commenter":{"displayName":"War Gravy","id":"3150413"}}],"itemTally":1,"owner":{"displayName":"jwdonahue","id":"3150445"}},{"id":"20868049","creationDate":"2014-01-01T11:14:06.130","body":"\n\nI'm afraid your code is invalid - the `search` algorithm requires forward iterators, but `istreambuf_iterator` is only an input iterator.\n\nConceptually that makes sense - the algorithm needs to backtrack on a partial match, but the stream may not support backtracking.\n\nThe actual behaviour is undefined - so the implementation is allowed to be helpful and make it seem to work, but doesn't have to.\n\nI think you either need to copy the input, or use a smarter search algorithm (single-pass is possible) or a smarter iterator.\n\n(In an ideal world at least one of the compilers would have warned you about this.)","accepted":true,"comments":[],"itemTally":2,"owner":null}],"creationYearMonth":"201408","itemTally":0,"owner":{"displayName":"War Gravy","id":"3150413"}},"$$hashKey":"03Z"}],"shadowTotals":{"tags":5,"dateStart":5,"dateEnd":5}}}
