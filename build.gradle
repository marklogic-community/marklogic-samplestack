buildscript {
	ext {
		springBootVersion = '1.0.0.BUILD-SNAPSHOT'
		markLogicBootVersion = '1.0.0.BUILD-SNAPSHOT'
	}
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'groovy'

task markLogicInit(type: MarkLogicInitTask) 

task markLogicTeardown(type: MarkLogicTeardownTask)

task markLogicApplication(type: MarkLogicApplicationTask)

task loadGithub(type: GithubSlurpTask) {
   file = "githubSample.json"
}


/* The code repositories to consult for dependencies */
repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    // not needed for now maven { url "http://developer.marklogic.com/maven2" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-integration:${springBootVersion}")
    // compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    // compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-tomcat")
    }
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile('com.marklogic:client-api-java:3.0-SNAPSHOT') {
        exclude(group: 'org.slf4j')
    }
    testCompile('com.jayway.jsonpath:json-path:0.9.1') {
        exclude(group: 'org.slf4j')
    }
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}



/* task to generate the gradle wrapper script */
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
