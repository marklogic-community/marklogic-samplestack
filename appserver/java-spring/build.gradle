/*
 * Samplestack gradle build file
 */

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

/* spring boot build dependency */
buildscript {
	ext {
		springBootVersion = '1.2.1.RELEASE'
	}
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()

        maven {url "http://developer.marklogic.com/maven2/"}
        maven {url "http://rjrudin.github.io/marklogic-java/releases"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/* plugins */
apply plugin: 'groovy'
apply plugin: 'spring-boot'


group = samplestackGroup
version = samplestackVersion
sourceCompatibility = samplestackSourceCompatibility

/**
 * ASSEMBLE
 */
assemble.dependsOn(":database:mlDeploy")

/* use same properties for gradle and Java runtime */
task props(type: Copy) {
    from('.') {
        include 'gradle.properties'
    }
    into 'src/main/resources'
}

/*
 * appserver
 * assembles the project, loads sample data and starts the appserver on port 8090
 */
task appserver <<
{
   println "Bootstrapping, seeding and starting Samplestack appserver"
}
appserver.dependsOn(clean, ":appserver:java-spring:assemble", ":database:dbLoad", bootRun)
bootRun.shouldRunAfter(":database:dbLoad")


/* The code repositories to consult for dependencies */
repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.3.7"
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.security:spring-security-ldap:4.0.0.RC1")
    compile("org.springframework.security:spring-security-web:4.0.0.RC1")
    compile("org.springframework.security:spring-security-test:4.0.0.RC1")
    compile("org.apache.directory.server:apacheds-server-jndi:1.5.5")
    compile("org.apache.directory.server:apacheds-bootstrap-partition:1.5.5")
    compile("org.apache.directory.server:apacheds-bootstrap-extract:1.5.5")
    compile("joda-time:joda-time:2.4")
    compile('com.marklogic:java-client-api:3.0.1') {
        exclude(group: 'org.slf4j')
        exclude(group: 'ch.qos.logback')
    }
    testCompile('com.jayway.jsonpath:json-path:1.1.0') {
        exclude(group: 'org.slf4j')
    }
    testCompile('org.skyscreamer:jsonassert:1.2.3')
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

task unitTest(type: Test) {
    useJUnit {
        includeCategories 'com.marklogic.samplestack.testing.UnitTests'
    }
}

test.dependsOn(props, ":database:mlLoadModules")

task dbTest(type: Test) {
    useJUnit {
        includeCategories 'com.marklogic.samplestack.testing.DatabaseExtensionTests'
    }
}

task integrationTest(type: Test) {
    useJUnit {
        includeCategories 'com.marklogic.samplestack.testing.IntegrationTests'
    }
}

